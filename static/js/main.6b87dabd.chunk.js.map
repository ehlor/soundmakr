{"version":3,"sources":["Hooks/useCloseFromOutside.js","Components/SimpleWaveform.js","GlobalState.js","Hooks/useImportSound.js","Components/Button.js","Components/ImportDialog.js","Components/Waveform.js","utils.js","Components/AudioItem.js","Components/AudioContainer.js","Components/FormatSelector.js","Components/ButtonImportFromPC.js","Components/ButtonExport.js","Components/ButtonRemove.js","Components/Toolbar.js","Components/Knob.js","Components/AudioEffects.js","App.js","index.js","Styles/Waveform.module.css","Styles/Button.module.css","Styles/AudioItem.module.css","Styles/AudioContainer.module.css","Styles/Knob.module.css","Styles/Toolbar.module.css","Styles/AudioEffects.module.css","Styles/App.module.css","Styles/ImportDialog.module.css"],"names":["useCloseFromOutside","onClose","ref","useRef","useEffect","close","e","current","contains","target","document","body","addEventListener","removeEventListener","SimpleWaveform","url","play","setPlay","waveformRef","wavesurfer","WaveSurfer","create","container","barWidth","responsive","progressColor","cursorColor","waveColor","on","prev","state","destroy","backend","window","load","pause","className","styles","waveform","filterList","useAudioStore","set","audioContext","AudioContext","sampleRate","audio","offset","setAudio","newAudio","setOffset","newOffset","removeAudio","id","filter","sound","index","useEffectsStore","nodes","effects","addEffects","ctx","produce","draft","push","gain","lowpass","frequency","value","rad","Q","highpass","bandpass","peaking","reduce","acc","node","createBiquadFilter","type","createGain","connect","destination","removeEffects","splice","toggleFilter","Object","keys","forEach","disconnect","input","updateFilter","unit","setGain","useAudioContainerStore","width","trim","x1","x2","setWidth","newWidth","Math","max","modifyWidth","isUp","setTrim","undefined","useToolbarStore","isImportDialogOpen","isAllPlaying","isSamplePlaying","isTrimmingOn","isMovingOn","isOkClicked","selectedAudio","setIsImportDialogOpen","bool","setIsAllPlaying","setIsSamplePlaying","setIsTrimmingOn","setIsMovingOn","setIsOkClicked","setSelectedAudio","useImportSound","shallow","getAudioBuffer","a","fetch","response","arrayBuffer","decodeAudioData","audioBuffer","console","error","delay","length","Button","title","onClick","isOn","children","button","style","backgroundColor","api_key","SearchContainer","searchSounds","useState","query","setQuery","searchContainer","searchbar","placeholder","onChange","onKeyDown","key","searchButton","SoundList","sounds","closeDialog","importSound","handleClick","previews","soundList","map","soundInfo","trunc","duration","soundNameDescription","name","lines","tagName","description","replace","buttonContainer","event","stopPropagation","handlePlay","ImportDialog","onDialogClose","setSounds","scrollRef","res","json","data","scrollToTop","importDialogBackground","importDialog","scrollbar","results","navButtonContainer","previous","navButton","next","Waveform","props","prevAudioBuffer","audioContainer","filters","setFilter","getDuration","toggleInteraction","loadDecodedBuffer","scrollWidth","seekTo","drawBuffer","setWaveformWidth","marginLeft","posX","onMouseDown","onMouseUp","getDelayFromClick","containerRef","widthInSec","screenToFullRatio","clientWidth","AudioItem","waveformWidth","isDragging","setIsDragging","isClickInsideItem","setIsClickInsideItem","setPosX","oldWidth","clickedX","clickedPosX","elementRef","handleMouseUp","clickedPos","pageX","offsetLeft","scrollLeft","min","trimAudioBuffer","oWidth","numberOfChannels","x","newAudioBuffer","createBuffer","i","channelData","getChannelData","newChannelData","Float32Array","subarray","copyToChannel","handleMouseClick","handleDrag","audioItem","onMouseMove","trimBlock","left","AudioContainer","playing","setPlaying","isTrackXVisible","setIsTrackXVisible","positionRatio","positionPixel","zoomInfo","setZoomInfo","isMouseDown","setIsMouseDown","sources","startTime","interval","preventDefault","passive","source","createBufferSource","buffer","currentTime","onended","prevPlaying","start","setInterval","clearInterval","err","onWheel","pixelPos","containerPosPixel","deltaY","classList","height","onUpdate","scrollValues","prevScrollValues","trackXVisible","contentScrollWidth","newPixelPos","scrollTo","handleScrollbarUpdate","position","noScrollY","progressBar","FormatSelector","audioFileFormat","setAudioFileFormat","isOpen","setIsOpen","formatSelector","format","formatOptions","innerHTML","ButtonImportFromPC","importFile","files","URL","createObjectURL","accept","hidden","htmlFor","ButtonExport","getState","maxSampleLength","offlineCtx","OfflineAudioContext","getConnectedSources","oncomplete","audioEncoder","renderedBuffer","blob","date","Date","toJSON","slice","createElement","href","download","click","startRendering","ButtonRemove","ContentCutIconRounded","createSvgIcon","d","Toolbar","handleTrimFinished","toolbar","appName","toolContainer","editContainer","Knob","func","isClicked","setIsClicked","handleMouseMove","clicked","offsetTop","oX","oY","rX","rY","pageY","nX","clientHeight","nY","knob","borderRadius","transform","paddingTop","boxSizing","indicator","margin","CenterKnob","callback","radians","atan2","PI","LeftKnob","FrequencyKnob","freq","QKnob","GainKnob","AudioEffects","audioEffects","Gain","Filter","gainKnob","FilterToggle","label","handleChange","KnobPanel","knobPanel","knobContainer","infoContainer","togglePanel","toggle","filterCheckbox","checked","filterToggle","step","values","direction","Direction","Up","renderTrack","gainSliderTrack","renderThumb","gainSliderThumb","floor","App","app","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.6b87dabd.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react'\r\n\r\nexport default function useCloseFromOutside(onClose) {\r\n    const ref = useRef()\r\n\r\n    useEffect(() => {\r\n        const close = (e) => {\r\n            if (ref.current?.contains(e.target)) return\r\n            onClose()\r\n        }\r\n        document.body.addEventListener('click', close)\r\n        return () => document.body.removeEventListener('click', close)\r\n    }, [onClose])\r\n\r\n    return ref\r\n}","import React, { useEffect, useRef } from 'react'\r\nimport WaveSurfer from 'wavesurfer.js'\r\n\r\nimport styles from '../Styles/Waveform.module.css'\r\n\r\nexport default function SimpleWaveform({ url, play, setPlay }) {\r\n    const waveformRef = useRef()\r\n    const wavesurfer = useRef()\r\n\r\n    useEffect(() => {\r\n        wavesurfer.current = WaveSurfer.create({\r\n            container: waveformRef.current,\r\n            barWidth: 2,\r\n            responsive: true,\r\n            progressColor: '#1d98fd',\r\n            cursorColor: '#303030',\r\n            waveColor: '#fafafa',\r\n        })\r\n        wavesurfer.current.on('finish', () => setPlay(prev => ({ ...prev, state: false })))\r\n        const destroy = () => {\r\n            delete wavesurfer.current.backend\r\n            wavesurfer.current.destroy()\r\n        }\r\n        window.addEventListener('beforeunload', destroy);\r\n        return () => {\r\n            destroy()\r\n            window.removeEventListener('beforeunload', destroy)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        wavesurfer.current.load(url)\r\n    }, [url])\r\n\r\n    useEffect(() => {\r\n        if (play) wavesurfer.current.play()\r\n        else wavesurfer.current.pause()\r\n    }, [play])\r\n\r\n    return (\r\n        <div\r\n            className={styles.waveform} \r\n            ref={waveformRef} \r\n        />\r\n    )\r\n}\r\n","import create from 'zustand'\r\nimport produce from 'immer'\r\n\r\nconst filterList = ['lowpass', 'highpass', 'bandpass', 'peaking']\r\n\r\nexport const useAudioStore = create(set => ({\r\n    audioContext: new AudioContext({ sampleRate: 44100 }),\r\n    audio: [],\r\n    offset: 0,\r\n    setAudio: (newAudio) => set({ audio: newAudio }),\r\n    setOffset: (newOffset) => set({ offset: newOffset }),\r\n    removeAudio: (id) => set(state => ({ audio: state.audio.filter((sound, index) => index !== id) }))\r\n}))\r\n\r\nexport const useEffectsStore = create(set => ({\r\n    nodes: [],\r\n    effects: [],\r\n    addEffects: (ctx) => set(produce(draft => {\r\n        draft.effects.push({\r\n            gain: 1,\r\n            lowpass: {\r\n                on: false,\r\n                frequency: { value: 21.533203125, rad: 0 },\r\n                Q: { value: 0.0001, rad: 0 }\r\n            },\r\n            highpass: {\r\n                on: false,\r\n                frequency: { value: 21.533203125, rad: 0 },\r\n                Q: { value: 0.0001, rad: 0 }\r\n            },\r\n            bandpass: {\r\n                on: false,\r\n                frequency: { value: 21.533203125, rad: 0 },\r\n                Q: { value: 0.0001, rad: 0 }\r\n            },\r\n            peaking: {\r\n                on: false,\r\n                frequency: { value: 21.533203125, rad: 0 },\r\n                Q: { value: 0.0001, rad: 0 },\r\n                gain: { value: 0, rad: 0 }\r\n            }\r\n        })\r\n        const nodes = filterList.reduce((acc, filter) => {\r\n            const node = ctx.createBiquadFilter()\r\n            node.on = false\r\n            node.type = filter\r\n            node.frequency.value = 21.533203125\r\n            node.Q.value = 0.0001\r\n            if (filter === 'peaking') node.gain.value = 1\r\n            return { ...acc, [filter]: node }\r\n        }, {})\r\n        const gain = ctx.createGain()\r\n        gain.gain.value = 1\r\n        nodes.gain = gain\r\n        gain.connect(ctx.destination)\r\n        draft.nodes.push(nodes)\r\n    })),\r\n    removeEffects: (id) => set(produce(draft => {\r\n        draft.nodes.splice(id, 1)\r\n        draft.effects.splice(id, 1)\r\n    })),\r\n    toggleFilter: (id, type, value, ctx) => set(produce(draft => {\r\n        draft.effects[id][type].on = value\r\n        draft.nodes[id][type].on = value\r\n        Object.keys(draft.nodes[id]).forEach(node => draft.nodes[id][node].disconnect())\r\n        let input = draft.nodes[id].gain\r\n        filterList.forEach(filter => {\r\n            if (draft.nodes[id][filter].on === true || (draft.nodes[id].type === type && value)) \r\n                input = input.connect(draft.nodes[id][filter])\r\n        })\r\n        input.connect(ctx.destination)\r\n    })),\r\n    updateFilter: (id, type, unit, value, rad) => set(produce(draft => {\r\n        draft.effects[id][type][unit].value = value\r\n        draft.effects[id][type][unit].rad = rad\r\n        draft.nodes[id][type][unit].value = value\r\n    })),\r\n    setGain: (value, id) => set(produce(draft => {\r\n        draft.effects[id].gain = value\r\n        draft.nodes[id].gain.gain.value = value\r\n    }))\r\n}))\r\n\r\nexport const useAudioContainerStore = create(set => ({\r\n    width: 0,\r\n    trim: {\r\n        id: 0,\r\n        x1: 0,\r\n        x2: 0\r\n    },\r\n    setWidth: (newWidth) => set(state => ({ \r\n        width: Math.max(newWidth, state.width)\r\n    })),\r\n    modifyWidth: (isUp) => set(state => {\r\n        let width\r\n        if (isUp) {\r\n            if (state.width > 20) width = state.width - 10\r\n            else width = (state.width / 2) < 0.5 ? state.width : state.width / 2\r\n        } else {\r\n            if (state.width > 10) width = state.width + 10\r\n            else width = state.width * 2\r\n        }\r\n        return { width }\r\n    }),\r\n    setTrim: (id, x2, x1) => set(produce(draft => {\r\n        draft.trim.id = id\r\n        draft.trim.x2 = x2\r\n        if (x1 !== undefined) draft.trim.x1 = x1\r\n    })),\r\n}))\r\n\r\nexport const useToolbarStore = create(set => ({\r\n    isImportDialogOpen: false,\r\n    isAllPlaying: false,\r\n    isSamplePlaying: false,\r\n    isTrimmingOn: false,\r\n    isMovingOn: false,\r\n    isOkClicked: false,\r\n    selectedAudio: -1,\r\n    setIsImportDialogOpen: (bool) => set({ isImportDialogOpen: bool }),\r\n    setIsAllPlaying: (bool) => set({ isAllPlaying: bool }),\r\n    setIsSamplePlaying: (bool) => set({ isSamplePlaying: bool }),\r\n    setIsTrimmingOn: (bool) => set({ isTrimmingOn: bool, isMovingOn: false, isOkClicked: false }),\r\n    setIsMovingOn: (bool) => set({ isMovingOn: bool, isTrimmingOn: false }),\r\n    setIsOkClicked: (bool) => set({ isOkClicked: bool }),\r\n    setSelectedAudio: (id) => set({ selectedAudio: id })\r\n}))","import shallow from \"zustand/shallow\";\r\nimport { useAudioStore, useEffectsStore, useToolbarStore } from \"../GlobalState\";\r\n\r\nexport default function useImportSound() {\r\n    const [audioContext, audio, setAudio] = useAudioStore(state => [\r\n        state.audioContext, state.audio, state.setAudio\r\n    ], shallow)\r\n    const setSelectedAudio = useToolbarStore(state => state.setSelectedAudio)\r\n    const addEffects = useEffectsStore(state => state.addEffects)\r\n\r\n    const getAudioBuffer = async (url) => {\r\n        let audioBuffer\r\n        try {\r\n            const response = await fetch(url)\r\n            const arrayBuffer = await response.arrayBuffer()\r\n            audioBuffer = await audioContext.decodeAudioData(arrayBuffer)\r\n        } catch(err) {\r\n            console.error(err)\r\n        }\r\n        return audioBuffer\r\n    }\r\n    \r\n    const setGlobalAudioState = async (url) => {\r\n        const audioBuffer = await getAudioBuffer(url)\r\n        const newAudio = [...audio, { audioBuffer, delay: 0 }]\r\n        setSelectedAudio(audio.length)\r\n        addEffects(audioContext)\r\n        setAudio(newAudio)\r\n    }\r\n\r\n    return setGlobalAudioState\r\n}","import React from 'react'\r\nimport styles from '../Styles/Button.module.css'\r\n\r\nexport default function Button({ className, title, onClick, isOn, children }) {\r\n    return (\r\n        <div \r\n            className={`${styles.button} ${className}`}\r\n            title={title}\r\n            onClick={onClick}\r\n            style={isOn ? { backgroundColor: '#1d98fd' } : {}}\r\n        >\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useRef } from 'react'\r\nimport Shiitake from 'shiitake';\r\nimport { Scrollbar } from 'react-scrollbars-custom'\r\nimport SearchIconRounded from '@material-ui/icons/SearchRounded'\r\nimport AddIconRounded from '@material-ui/icons/AddRounded'\r\nimport PlayArrowIconRounded from '@material-ui/icons/PlayArrowRounded'\r\n\r\nimport useCloseFromOutside from '../Hooks/useCloseFromOutside'\r\nimport SimpleWaveform from './SimpleWaveform'\r\nimport useImportSound from '../Hooks/useImportSound'\r\nimport Button from './Button'\r\nimport styles from '../Styles/ImportDialog.module.css'\r\n\r\nconst api_key = 'FUeslAUEuFkf1OlIlqqLJmkOW6Cw4sQ3oKM2PtsQ'\r\n\r\nfunction SearchContainer({ searchSounds }) {\r\n    const [query, setQuery] = useState('')\r\n    const url = `https://freesound.org/apiv2/search/text/?format=json&query=${query}&filter=license:\"Creative Commons 0\"&fields=name,description,samplerate,duration,previews&token=${api_key}`\r\n\r\n    const handleEnterPress = (e) => {\r\n        if (e.key === 'Enter') searchSounds(url)\r\n    }\r\n\r\n    return (\r\n        <div id={styles.searchContainer}>\r\n            <input \r\n                className={styles.searchbar}\r\n                type=\"text\"\r\n                placeholder=\"Search for sounds...\"\r\n                onChange={(e) => setQuery(e.target.value)} \r\n                onKeyDown={handleEnterPress}\r\n            />\r\n            <div \r\n                className={styles.searchButton}\r\n                onClick={() => searchSounds(url)}\r\n            >\r\n                <SearchIconRounded />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction SoundList({ sounds, closeDialog }) {\r\n    const [play, setPlay] = useState({ id: -1, state: false })\r\n    const importSound = useImportSound()\r\n\r\n    const handlePlay = (event, index) => {\r\n        event.stopPropagation()\r\n        if (play.id === index) setPlay(prev => { return { ...play, state: !prev.state }})\r\n        else {\r\n            setPlay({ ...play, state: false })\r\n            setPlay({ id: index, state: true })\r\n        }\r\n    }\r\n\r\n    const handleClick = async (index) => {\r\n        await importSound(sounds[index].previews['preview-hq-mp3'])\r\n        closeDialog()\r\n    }\r\n\r\n    return (\r\n        <ol className={styles.soundList}>\r\n            {sounds?.map((sound, index) => (\r\n                <li \r\n                    className={styles.soundInfo}\r\n                    key={index} \r\n                >\r\n                    <p>{Math.trunc(sound.duration * 10) / 10} s</p>\r\n                    <div className={styles.soundNameDescription}>\r\n                        <p>{sound.name}</p>\r\n                        <Shiitake\r\n                            lines={2}\r\n                            tagName=\"p\"\r\n                        >\r\n                            {sound.description.replace(/(<([^>]+)>)/gi, '')}\r\n                        </Shiitake>\r\n                    </div>\r\n                    <SimpleWaveform \r\n                        url={sound.previews['preview-hq-mp3']} \r\n                        play={index === play.id ? play.state : false} \r\n                        setPlay={setPlay}\r\n                    />\r\n                    <div className={styles.buttonContainer}>\r\n                        <Button \r\n                            className={styles.button}\r\n                            onClick={(e) => handlePlay(e, index)}\r\n                        >\r\n                            <PlayArrowIconRounded />\r\n                        </Button>\r\n                        <Button \r\n                            className={styles.button}\r\n                            onClick={() => handleClick(index)}\r\n                        >\r\n                            <AddIconRounded />\r\n                        </Button>\r\n                    </div>\r\n                </li>\r\n            ))}\r\n        </ol>\r\n    )\r\n}\r\n\r\nexport default function ImportDialog({ onDialogClose }) {\r\n    const [sounds, setSounds] = useState(null)\r\n    const ref = useCloseFromOutside(onDialogClose)\r\n    const scrollRef = useRef()\r\n\r\n    const searchSounds = async (url) => {\r\n        try{\r\n            const res = await fetch(url)\r\n            const data = await res.json()\r\n            setSounds(data)\r\n            scrollRef.current.scrollToTop()\r\n        } catch(err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id={styles.importDialogBackground}>\r\n            <div id={styles.importDialog} ref={ref}>\r\n                <Scrollbar \r\n                    className={styles.scrollbar}\r\n                    ref={scrollRef}    \r\n                >\r\n                    <SearchContainer searchSounds={searchSounds} />\r\n                    <SoundList \r\n                        sounds={sounds?.results}\r\n                        closeDialog={onDialogClose}\r\n                    />\r\n                    <div className={styles.navButtonContainer}>\r\n                        {sounds !== null && sounds.previous !== null && \r\n                            <Button \r\n                                className={styles.navButton}\r\n                                onClick={() => searchSounds(sounds.previous + `&token=${api_key}`)}\r\n                            >\r\n                                PREV\r\n                            </Button>\r\n                        }\r\n                        {sounds !== null && sounds.next !== null && \r\n                            <Button \r\n                                className={styles.navButton}\r\n                                onClick={() => searchSounds(sounds.next + `&token=${api_key}`)}\r\n                            >\r\n                                NEXT\r\n                            </Button>\r\n                        }\r\n                    </div>\r\n                </Scrollbar>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}","import React, { useState, useEffect, useRef } from 'react'\r\nimport WaveSurfer from 'wavesurfer.js'\r\nimport shallow from 'zustand/shallow'\r\n\r\nimport { useAudioContainerStore, useToolbarStore, useEffectsStore } from '../GlobalState'\r\nimport styles from '../Styles/Waveform.module.css'\r\n\r\nexport default function Waveform(props) {\r\n    const wavesurfer = useRef()\r\n    const waveformRef = useRef()\r\n    const prevAudioBuffer = useRef()\r\n    const audioContainer = useAudioContainerStore()\r\n    const [isSamplePlaying, setIsSamplePlaying] = useToolbarStore(state => [state.isSamplePlaying, state.setIsSamplePlaying], shallow)\r\n    const [isMovingOn, selectedAudio] = useToolbarStore(state => [state.isMovingOn, state.selectedAudio], shallow)\r\n    const filters = useEffectsStore(state => state.nodes[props.id].gain)\r\n    const [width, setWidth] = useState(null)\r\n    \r\n    useEffect(() => {\r\n        wavesurfer.current = (WaveSurfer.create({\r\n            container: waveformRef.current,\r\n            barWidth: 2,\r\n            responsive: true,\r\n            progressColor: '#1d98fd',\r\n            cursorColor: '#303030',\r\n            waveColor: '#fafafa',\r\n            audioContext: props.audioContext\r\n        }))\r\n        wavesurfer.current.backend.setFilter(filters)\r\n        wavesurfer.current.on('finish', () => {\r\n            setIsSamplePlaying(false)\r\n        })\r\n        wavesurfer.current.on('ready', () => {\r\n            audioContainer.setWidth(wavesurfer.current.getDuration())\r\n        })\r\n        wavesurfer.current.toggleInteraction()\r\n        const destroy = () => {\r\n            delete wavesurfer.current.backend\r\n            wavesurfer.current.destroy()\r\n        }\r\n        window.addEventListener('beforeunload', destroy);\r\n        return () => {\r\n            destroy()\r\n            window.removeEventListener('beforeunload', destroy)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        wavesurfer.current.toggleInteraction()\r\n    }, [isMovingOn])\r\n\r\n    useEffect(() => {\r\n        if(prevAudioBuffer.current !== props.audioBuffer) {\r\n            wavesurfer.current.loadDecodedBuffer(props.audioBuffer)\r\n            prevAudioBuffer.current = props.audioBuffer\r\n        }\r\n    }, [props.audioBuffer])\r\n\r\n    useEffect(() => {\r\n        setWidth((wavesurfer.current?.getDuration() / audioContainer.width)*100)\r\n    }, [props.audioBuffer, audioContainer.width])\r\n\r\n    useEffect(() => {\r\n        if (waveformRef.current.scrollWidth !== waveformRef.current.children[0].scrollWidth) {\r\n            wavesurfer.current.seekTo(0)\r\n        } \r\n        wavesurfer.current.drawBuffer()\r\n        props.setWaveformWidth(waveformRef.current.scrollWidth)\r\n    }, [width])\r\n\r\n    useEffect(() => {\r\n        if (wavesurfer.current === undefined) return\r\n        if (isSamplePlaying && selectedAudio === props.id) wavesurfer.current.play()\r\n        else wavesurfer.current.pause()\r\n    }, [isSamplePlaying])\r\n\r\n    return (\r\n        <div \r\n            className={styles.waveform}\r\n            style={{ \r\n                marginLeft: props.posX, \r\n                width: `${width}%`,\r\n                backgroundColor: selectedAudio === props.id ? 'rgb(80, 80, 92)' : 'rgb(92, 92, 92)'\r\n            }}\r\n            ref={waveformRef} \r\n            onMouseDown={props.onMouseDown}\r\n            onMouseUp={props.onMouseUp}\r\n        />\r\n    )\r\n}","export function getDelayFromClick(posX, containerRef, widthInSec) {\r\n    const screenToFullRatio = containerRef.current.clientWidth / containerRef.current.scrollWidth\r\n    const clickedToFullRatio = posX / containerRef.current.scrollWidth\r\n    return clickedToFullRatio / screenToFullRatio * widthInSec\r\n}\r\n\r\nexport function getOffsetFromClick() {\r\n\r\n}","import React, { useState, useEffect, useRef } from 'react'\r\nimport Waveform from './Waveform'\r\nimport shallow from 'zustand/shallow'\r\n\r\nimport { useAudioContainerStore, useAudioStore, useToolbarStore } from '../GlobalState'\r\nimport { getDelayFromClick } from '../utils'\r\nimport styles from '../Styles/AudioItem.module.css'\r\n\r\nexport default function AudioItem({ id, containerRef, scrollRef, audioBuffer }) {\r\n    const [isTrimmingOn, isMovingOn, isOkClicked, setSelectedAudio] = useToolbarStore(state => \r\n        [state.isTrimmingOn, state.isMovingOn, state.isOkClicked, state.setSelectedAudio]\r\n    , shallow)\r\n    const [width, trim, setTrim] = useAudioContainerStore(state => \r\n        [state.width, state.trim, state.setTrim]\r\n    , shallow)\r\n    const [audio, setAudio, audioContext] = useAudioStore(state => [state.audio, state.setAudio, state.audioContext], shallow)\r\n\r\n    const [waveformWidth, setWaveformWidth] = useState(null)\r\n    const [isDragging, setIsDragging] = useState(false)\r\n    const [isClickInsideItem, setIsClickInsideItem] = useState(false)\r\n    const [posX, setPosX] = useState(0)\r\n    const oldWidth = useRef(0)\r\n    const clickedX = useRef()\r\n    const clickedPosX = useRef()\r\n    const elementRef = useRef()\r\n\r\n    const handleMouseUp = (e) => {\r\n        if (isTrimmingOn && trim.id === id && isClickInsideItem) {\r\n            setIsClickInsideItem(false)\r\n            const clickedPos = e.pageX - containerRef.current.offsetLeft + scrollRef.current.scrollLeft\r\n            const x2 = Math.max(0, Math.min(clickedPos, waveformWidth)) / waveformWidth\r\n            setTrim(id, x2)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.body.addEventListener('mouseup', handleMouseUp)\r\n        return () => document.body.removeEventListener('mouseup', handleMouseUp)\r\n    }, [handleMouseUp])\r\n\r\n    useEffect(() => {\r\n        if (!isTrimmingOn && isOkClicked && trim.id === id) {\r\n            trimAudioBuffer()\r\n            setTrim(id, 0, 0)\r\n        }\r\n    }, [isTrimmingOn])\r\n\r\n    useEffect(() => {\r\n        if (width === 0) return\r\n        const oWidth = oldWidth.current\r\n        setPosX(prev => (oWidth / width) * prev)\r\n        oldWidth.current = width\r\n    }, [width])\r\n\r\n    const trimAudioBuffer = () => {\r\n        const { numberOfChannels, length, sampleRate } = audioBuffer\r\n\r\n        let { x1, x2 } = trim\r\n        if (x1 > x2) [x1, x2] = [x2, x1];\r\n        [x1, x2] = [x1, x2].map(x => Math.trunc(x * length)) // convert from percentage to sample frame index\r\n        const newAudioBuffer = audioContext.createBuffer(numberOfChannels, length - (x2-x1), sampleRate)\r\n        for(let i = 0; i < numberOfChannels; i++) {\r\n            let channelData = audioBuffer.getChannelData(i)\r\n            let newChannelData = new Float32Array(length - (x2-x1))\r\n            newChannelData.set(channelData.subarray(0, x1), 0) // [0, x1)\r\n            newChannelData.set(channelData.subarray(x2 + 1), x1) // (x2, n]\r\n            newAudioBuffer.copyToChannel(newChannelData, i)\r\n        }\r\n        const newAudio = [...audio]\r\n        newAudio[id].audioBuffer = newAudioBuffer\r\n        setAudio(newAudio)\r\n    }\r\n\r\n    const handleDrag = (e) => {\r\n        if (e.type === 'mousedown') {\r\n            setIsDragging(true)\r\n            clickedX.current = e.pageX\r\n            clickedPosX.current = posX\r\n        }\r\n        else if (e.type === 'mouseup' && isDragging) {\r\n            setIsDragging(false)\r\n            audio[id].delay = getDelayFromClick(posX, containerRef, width)\r\n        }\r\n    }\r\n\r\n    const handleMouseClick = (e) => {\r\n        if (!isTrimmingOn && isMovingOn) {\r\n            handleDrag(e)\r\n        }\r\n        else if (isTrimmingOn && e.type === 'mousedown') {\r\n            setIsClickInsideItem(true)\r\n            const x1Pos = e.pageX - containerRef.current.offsetLeft + scrollRef.current.scrollLeft\r\n            const x1 = x1Pos / e.target.scrollWidth\r\n            setTrim(id, x1, x1)\r\n        }\r\n    }\r\n\r\n    const handleMouseMove = (e) => {\r\n        if (isDragging) setPosX(Math.max(0, clickedPosX.current + (e.pageX - clickedX.current)))\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className={styles.audioItem}\r\n            ref={elementRef}\r\n            onClick={() => setSelectedAudio(id)}\r\n            onMouseMove={handleMouseMove}\r\n        >\r\n            {isTrimmingOn && trim.id === id && <div className={styles.trimBlock} style={{\r\n                left: `${Math.min(trim.x1, trim.x2) * waveformWidth}px`,\r\n                width: `${(Math.max(trim.x1, trim.x2) * waveformWidth - Math.min(trim.x1, trim.x2) * waveformWidth)}px`\r\n            }}/>}\r\n            <Waveform \r\n                id={id}\r\n                posX={posX}\r\n                audioBuffer={audioBuffer}\r\n                audioContext={audioContext}\r\n                onMouseDown={handleMouseClick}\r\n                onMouseUp={handleMouseClick}\r\n                setWaveformWidth={setWaveformWidth}\r\n            />\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useRef, useState } from 'react'\r\nimport shallow from 'zustand/shallow'\r\nimport { Scrollbar } from 'react-scrollbars-custom'\r\n\r\nimport AudioItem from './AudioItem'\r\nimport { getDelayFromClick } from '../utils'\r\nimport { useAudioContainerStore, useAudioStore, useEffectsStore, useToolbarStore } from '../GlobalState'\r\nimport styles from '../Styles/AudioContainer.module.css'\r\n\r\nexport default function AudioContainer() {\r\n    const [audioContext, audio, offset, setOffset] = useAudioStore(state => [\r\n        state.audioContext, state.audio, state.offset, state.setOffset\r\n    ], shallow)\r\n    const [isAllPlaying, setIsAllPlaying] = useToolbarStore(state => [state.isAllPlaying, state.setIsAllPlaying], shallow)\r\n    const [width, modifyWidth] = useAudioContainerStore(state => [state.width, state.modifyWidth], shallow)\r\n    const nodes = useEffectsStore(state => state.nodes)\r\n\r\n    const [playing, setPlaying] = useState(-1)\r\n    const [isTrackXVisible, setIsTrackXVisible] = useState(false)\r\n    const [zoomInfo, setZoomInfo] = useState({\r\n        positionRatio: 0,\r\n        positionPixel: 0\r\n    })\r\n    const [isMouseDown, setIsMouseDown] = useState(false)\r\n    const sources = useRef([])\r\n    const containerRef = useRef()\r\n    const scrollRef = useRef()\r\n    const startTime = useRef(0)\r\n    const interval = useRef()\r\n\r\n    useEffect(() => {\r\n        containerRef.current.addEventListener('wheel', (e) => {\r\n            e.preventDefault()\r\n        }, { passive: false })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        try {\r\n            if (isAllPlaying) {\r\n                sources.current = audio.map((data, index) => {\r\n                    const source = audioContext.createBufferSource()\r\n                    source.buffer = data.audioBuffer\r\n                    source.connect(nodes[index].gain)\r\n                    return source\r\n                })\r\n                setPlaying(sources.current.length)\r\n                const currentTime = audioContext.currentTime\r\n                sources.current.forEach((source, i) => {\r\n                    source.onended = () => {\r\n                        source.disconnect()\r\n                        setPlaying(prevPlaying => prevPlaying - 1)\r\n                    }\r\n                    source.start(currentTime + Math.max(0, audio[i].delay - offset) + 0.02, Math.max(0, offset - audio[i].delay)) // 20 ms to sync up\r\n                })\r\n                startTime.current = currentTime\r\n                interval.current = setInterval(() => setOffset(offset + audioContext.currentTime - startTime.current), 5)\r\n            } else {\r\n                sources.current.forEach(source => source.disconnect())\r\n                //sources.current.forEach(source => source.stop(currentTime + 0.02))\r\n                clearInterval(interval.current)\r\n                if (playing < 0) setOffset(0)\r\n                //else setOffset(startTime.current === 0 ? 0 : offset + currentTime - startTime.current)\r\n            }\r\n        } catch(err) {\r\n            console.error(err)\r\n        }\r\n    }, [isAllPlaying])\r\n\r\n    useEffect(() => {\r\n        if (playing === 0) {\r\n            setPlaying(-1)\r\n            setIsAllPlaying(false)\r\n        }\r\n    }, [playing]);\r\n\r\n    const zoomContainer = (e) => {\r\n        const pixelPos = e.pageX - containerRef.current.offsetLeft + scrollRef.current.scrollLeft\r\n        setZoomInfo({\r\n            positionPixel: pixelPos,\r\n            positionRatio: pixelPos / scrollRef.current.scrollWidth,\r\n            containerPosPixel: e.pageX - containerRef.current.offsetLeft\r\n        })\r\n        if (e.deltaY < 0) modifyWidth(true)\r\n        else modifyWidth(false)\r\n    }\r\n\r\n    const handleClick = (e) => {\r\n        setIsMouseDown(false)\r\n        if (e.target.classList.contains(\"ScrollbarsCustom-Track\") \r\n            || e.target.classList.contains(\"ScrollbarsCustom-Thumb\")) return\r\n        const pixelPos = e.pageX - containerRef.current.offsetLeft + scrollRef.current.scrollLeft\r\n        setOffset(getDelayFromClick(pixelPos, containerRef, width))\r\n    }\r\n\r\n    const handleScrollbarUpdate = (scrollValues, prevScrollValues) => {\r\n        setIsTrackXVisible(scrollValues.trackXVisible)\r\n        if (isMouseDown) return\r\n        if (scrollValues.contentScrollWidth !== prevScrollValues.contentScrollWidth) {\r\n            const newPixelPos = scrollValues.contentScrollWidth * zoomInfo.positionRatio\r\n            scrollRef.current.scrollTo(newPixelPos - zoomInfo.containerPosPixel)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div \r\n            id={styles.audioContainer}\r\n            ref={containerRef} \r\n            onWheel={zoomContainer}\r\n            onClick={handleClick}\r\n            onMouseDown={() => setIsMouseDown(true)}\r\n            style={{\r\n                height: `max(15vh, min(calc(15vh*${audio.length}), 45vh))`\r\n            }}\r\n        >\r\n            <Scrollbar\r\n                ref={scrollRef}\r\n                onUpdate={(scrollValues, prevScrollValues) => handleScrollbarUpdate(scrollValues, prevScrollValues)}\r\n                style={{ \r\n                    position: 'relative',\r\n                    height: isTrackXVisible ? `min(calc(15vh*${audio.length} + 10px), calc(45vh + 10px))` \r\n                        : `min(calc(15vh*${audio.length}), 45vh)`,\r\n                    width: audio.length <= 3 ? '100%' : 'calc(100% + 10px)'\r\n                }}\r\n                noScrollY={audio.length <= 3}\r\n            >\r\n                <div \r\n                    id={styles.progressBar}\r\n                    style={{\r\n                        height: `calc(${audio.length}*15vh)`,\r\n                        left: (offset / width) * containerRef.current?.scrollWidth\r\n                    }}\r\n                />\r\n                {audio.map((data, index) => (\r\n                    <AudioItem\r\n                        key={index}\r\n                        id={index}\r\n                        containerRef={containerRef}\r\n                        scrollRef={scrollRef}\r\n                        audioBuffer={data.audioBuffer}\r\n                    />\r\n                ))}\r\n            </Scrollbar>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport useCloseFromOutside from '../Hooks/useCloseFromOutside'\r\nimport styles from '../Styles/Toolbar.module.css'\r\n\r\nexport default function FormatSelector({ audioFileFormat, setAudioFileFormat }) {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const ref = useCloseFromOutside(() => setIsOpen(false))\r\n\r\n    return (\r\n        <div \r\n            className={`${styles.formatSelector} ${styles.format}`}\r\n            onClick={() => setIsOpen(prev => !prev)}\r\n            ref={ref}\r\n        >\r\n            {audioFileFormat}\r\n            {isOpen &&\r\n                <ol \r\n                    className={`${styles.formatOptions} ${styles.format}`}\r\n                    onClick={(e) => setAudioFileFormat(e.target.innerHTML)}\r\n                >\r\n                    <li>.wav</li>\r\n                    <li>.mp3</li>\r\n                </ol>\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nimport useImportSound from '../Hooks/useImportSound'\r\nimport styles from '../Styles/Button.module.css'\r\n\r\nexport default function ButtonImportFromPC({ className, children }) {\r\n    const importSound = useImportSound()\r\n\r\n    const importFile = async (e) => {\r\n        if (e.target.files[0] === undefined) return\r\n        const url = URL.createObjectURL(e.target.files[0])\r\n        importSound(url)\r\n        e.target.value = ''\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input \r\n                id=\"addFile\"\r\n                type=\"file\" \r\n                accept=\".wav,.mp3\"\r\n                onChange={importFile}\r\n                hidden\r\n            />\r\n            <label htmlFor=\"addFile\" className={`${styles.button} ${className}`} title=\"Add\">\r\n                {children}\r\n            </label>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport audioEncoder from 'audio-encoder'\r\n\r\nimport Button from './Button'\r\nimport { useAudioStore, useEffectsStore } from '../GlobalState'\r\n\r\nexport default function ButtonExport({ className, audioFileFormat, children }) {\r\n    const audio = useAudioStore.getState().audio\r\n    const effects = useEffectsStore.getState().effects\r\n    \r\n    const handleClick = () => {\r\n        const maxSampleLength = Math.max(...audio.map(sound => sound.audioBuffer.length + Math.trunc(sound.delay * 44100)))\r\n        const offlineCtx = new OfflineAudioContext(2, maxSampleLength, 44100)\r\n        const sources = getConnectedSources(audio, effects, offlineCtx)\r\n        const currentTime = offlineCtx.currentTime\r\n        sources.forEach((source, i) => source.start(currentTime + audio[i].delay + 0.02)) // 20 ms to sync up\r\n        offlineCtx.oncomplete = (e) => {\r\n            audioEncoder(e.renderedBuffer, audioFileFormat === '.wav' ? 0 : 320, null, blob => {\r\n                const date = new Date().toJSON().slice(0, 19).replace('T', '--').replace(/:/g, '-')\r\n                let a = document.createElement('a')\r\n                a.href = URL.createObjectURL(blob)\r\n                a.download = `${date}${audioFileFormat}`\r\n                a.click()\r\n            })\r\n        }\r\n        offlineCtx.startRendering()\r\n    }\r\n\r\n    return (\r\n        <Button \r\n            className={className}\r\n            onClick={handleClick}\r\n            title=\"Save\"\r\n        >\r\n            {children}\r\n        </Button>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst filterList = ['lowpass', 'highpass', 'bandpass', 'peaking']\r\n\r\n// creates audio graph\r\nfunction getConnectedSources(audio, effects, offlineCtx) {\r\n    return audio.map((data, id) => {\r\n        const source = offlineCtx.createBufferSource()\r\n        source.buffer = data.audioBuffer\r\n\r\n        const gain = offlineCtx.createGain()\r\n        gain.gain.value = effects[id].gain\r\n        \r\n        let input = source.connect(gain)\r\n        filterList.forEach(filter => {\r\n            if (effects[id][filter].on === true) {\r\n                const node = offlineCtx.createBiquadFilter()\r\n                node.type = filter\r\n                node.frequency.value = effects[id][filter].frequency.value\r\n                node.Q.value = effects[id][filter].Q.value\r\n                if (filter === 'peaking') node.gain.value = effects[id][filter].gain.value\r\n                input = input.connect(node)\r\n            }\r\n        })\r\n        input.connect(offlineCtx.destination)\r\n\r\n        return source\r\n    })\r\n}","import React from 'react'\r\n\r\nimport Button from './Button'\r\nimport { useAudioStore, useEffectsStore, useToolbarStore } from '../GlobalState'\r\n\r\nexport default function ButtonRemove({ className, children }) {\r\n    const selectedAudio = useToolbarStore(state => state.selectedAudio)\r\n    const removeEffects = useEffectsStore(state => state.removeEffects)\r\n    const removeAudio = useAudioStore(state => state.removeAudio)\r\n\r\n    const handleClick = () => {\r\n        removeEffects(selectedAudio)\r\n        removeAudio(selectedAudio)\r\n    }\r\n\r\n    return (\r\n        <Button \r\n            className={className}\r\n            onClick={handleClick}\r\n            title=\"Remove\"\r\n        >\r\n            {children}\r\n        </Button>\r\n    )\r\n}","import React from 'react'\r\nimport shallow from 'zustand/shallow'\r\nimport SearchIconRounded from '@material-ui/icons/SearchRounded'\r\nimport AddIconRounded from '@material-ui/icons/AddRounded'\r\nimport PlaylistPlayIconRounded from '@material-ui/icons/PlaylistPlayRounded'\r\nimport PlayArrowIconRounded from '@material-ui/icons/PlayArrowRounded'\r\nimport OpenWithIconRounded from '@material-ui/icons/OpenWithRounded'\r\nimport CheckIconRounded from '@material-ui/icons/CheckRounded'\r\nimport ClearIconRounded from '@material-ui/icons/ClearRounded'\r\nimport SaveAltIconRounded from '@material-ui/icons/SaveAltRounded'\r\nimport DeleteForeverIconRounded from '@material-ui/icons/DeleteForeverRounded'\r\nimport createSvgIcon from \"@material-ui/icons/utils/createSvgIcon\";\r\n\r\nimport Button from './Button'\r\nimport FormatSelector from './FormatSelector'\r\nimport ButtonImportFromPC from './ButtonImportFromPC'\r\nimport ButtonExport from './ButtonExport'\r\nimport ButtonRemove from './ButtonRemove'\r\nimport { useToolbarStore } from '../GlobalState'\r\nimport styles from '../Styles/Toolbar.module.css'\r\n\r\nconst ContentCutIconRounded = createSvgIcon(\r\n    <path d=\"M9.64 7.64c.23-.5.36-1.05.36-1.64 0-2.21-1.79-4-4-4S2 3.79 2 6s1.79 4 4 4c.59 0 1.14-.13 1.64-.36L10 12l-2.36 2.36C7.14 14.13 6.59 14 6 14c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4c0-.59-.13-1.14-.36-1.64L12 14l7 7h3v-1L9.64 7.64zM6 8c-1.1 0-2-.89-2-2s.9-2 2-2 2 .89 2 2-.9 2-2 2zm0 12c-1.1 0-2-.89-2-2s.9-2 2-2 2 .89 2 2-.9 2-2 2zm6-7.5c-.28 0-.5-.22-.5-.5s.22-.5.5-.5.5.22.5.5-.22.5-.5.5zM19 3l-6 6 2 2 7-7V3z\" />,\r\n    \"ContentCutRounded\"\r\n)\r\n\r\nexport default function Toolbar({ audioFileFormat, setAudioFileFormat }) {\r\n    const setIsImportDialogOpen = useToolbarStore(state => state.setIsImportDialogOpen)\r\n    const [isAllPlaying, setIsAllPlaying] = useToolbarStore(state => [state.isAllPlaying, state.setIsAllPlaying], shallow)\r\n    const [isSamplePlaying, setIsSamplePlaying] = useToolbarStore(state => [state.isSamplePlaying, state.setIsSamplePlaying], shallow)\r\n    const [isTrimmingOn, setIsTrimmingOn] = useToolbarStore(state => [state.isTrimmingOn, state.setIsTrimmingOn], shallow)\r\n    const [isMovingOn, setIsMovingOn] = useToolbarStore(state => [state.isMovingOn, state.setIsMovingOn], shallow)\r\n    const setIsOkClicked = useToolbarStore(state => state.setIsOkClicked)\r\n\r\n    const handleTrimFinished = (isOkClicked) => {\r\n        setIsTrimmingOn(false)\r\n        setIsOkClicked(isOkClicked)\r\n    }\r\n\r\n    return (\r\n        <div id={styles.toolbar}>\r\n            <div id={styles.appName}>SOUNDMAKR</div>\r\n            <div id={styles.toolContainer}>\r\n                <div>\r\n                    <Button \r\n                        className={styles.button}\r\n                        title=\"Search\"\r\n                        onClick={() => setIsImportDialogOpen(true)}\r\n                    >\r\n                        <SearchIconRounded />\r\n                    </Button>\r\n                    <ButtonImportFromPC className={styles.button}>\r\n                        <AddIconRounded />\r\n                    </ButtonImportFromPC>\r\n                    <ButtonExport \r\n                        className={styles.button}\r\n                        audioFileFormat={audioFileFormat}\r\n                    >\r\n                        <SaveAltIconRounded />\r\n                    </ButtonExport>\r\n                </div>\r\n                <div>\r\n                    <Button \r\n                        className={styles.button}\r\n                        title=\"Play All\"\r\n                        onClick={() => setIsAllPlaying(!isAllPlaying)}\r\n                        isOn={isAllPlaying}\r\n                    >\r\n                        <PlaylistPlayIconRounded />\r\n                    </Button>\r\n                    <Button \r\n                        className={styles.button}\r\n                        title=\"Play\"\r\n                        onClick={() => setIsSamplePlaying(!isSamplePlaying)}\r\n                        isOn={isSamplePlaying}\r\n                    >\r\n                        <PlayArrowIconRounded />\r\n                    </Button>\r\n                </div>\r\n                <div id={styles.editContainer}>\r\n                    <Button \r\n                        className={styles.button}\r\n                        title=\"Trim\"\r\n                        onClick={() => setIsTrimmingOn(!isTrimmingOn)}\r\n                        isOn={isTrimmingOn}\r\n                    >\r\n                        <ContentCutIconRounded />\r\n                    </Button>\r\n                    <Button \r\n                        className={styles.button}\r\n                        title=\"Move\"\r\n                        onClick={() => setIsMovingOn(!isMovingOn)}\r\n                        isOn={isMovingOn}\r\n                    >\r\n                        <OpenWithIconRounded />\r\n                    </Button>\r\n                    <ButtonRemove className={styles.button}>\r\n                        <DeleteForeverIconRounded />\r\n                    </ButtonRemove>\r\n                </div>\r\n                <FormatSelector \r\n                    audioFileFormat={audioFileFormat}\r\n                    setAudioFileFormat={setAudioFileFormat}\r\n                />\r\n                <div>\r\n                    {isTrimmingOn && \r\n                        <Button \r\n                            className={styles.button}\r\n                            title=\"Accept\"\r\n                            onClick={() => handleTrimFinished(true)}\r\n                        >\r\n                            <CheckIconRounded />\r\n                        </Button>\r\n                    }\r\n                    {isTrimmingOn && \r\n                        <Button \r\n                            className={styles.button}\r\n                            title=\"Cancel\"\r\n                            onClick={() => handleTrimFinished(false)}\r\n                        >\r\n                            <ClearIconRounded />\r\n                        </Button>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useRef, useState } from 'react'\r\nimport styles from '../Styles/Knob.module.css'\r\n\r\nfunction Knob({ func, offset, rad }) {\r\n    const ref = useRef()\r\n    const [isClicked, setIsClicked] = useState(false)\r\n\r\n    const handleMouseMove = (e, clicked = false) => {\r\n        e.stopPropagation()\r\n        if (isClicked || clicked) {\r\n            const [oX, oY] = [ref.current.offsetLeft, ref.current.offsetTop]\r\n            const [rX, rY] = [e.pageX - oX, e.pageY - oY] // relative to top left\r\n            const [nX, nY] = [(rX / ref.current.clientHeight * 2) - 1, \r\n                ((rY / ref.current.clientHeight * 2) - 1) * -1]// normalized to [-1, 1], flipped Y\r\n            func(nX, nY)\r\n        }\r\n    }\r\n\r\n    const handleMouseDown = (e) => {\r\n        e.stopPropagation()\r\n        setIsClicked(true)\r\n        handleMouseMove(e, true)\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className={styles.knob}\r\n            style={{\r\n                borderRadius: '50%',\r\n                transform: `rotate(${offset}deg)`\r\n            }}\r\n            ref={ref}\r\n            onMouseMove={handleMouseMove}\r\n            onMouseDown={handleMouseDown}\r\n            onMouseUp={() => setIsClicked(false)}\r\n        >\r\n            <div\r\n                className=\"indicatorContainer\"\r\n                style={{\r\n                    width: 'inherit',\r\n                    height: 'inherit',\r\n                    paddingTop: 4,\r\n                    transform: `rotate(${rad}rad)`,\r\n                    boxSizing: 'border-box'\r\n                }}\r\n            >\r\n                <div \r\n                    className={styles.indicator}\r\n                    style={{\r\n                        width: '10%',\r\n                        height: '30%',\r\n                        borderRadius: 2,\r\n                        margin: '0 auto'\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction CenterKnob({ callback, rad }) {\r\n    const func = (nX, nY) => {\r\n        let radians = Math.atan2(nX, nY) // 0 is up\r\n        radians = Math.min(Math.max(radians, -3*Math.PI/4), 3*Math.PI/4) // clamp to [-225, 255] deg\r\n        callback(radians / (3*Math.PI/4), radians) // return normalized values [-1, 1] & radians\r\n    }\r\n    return <Knob func={func} offset={0} rad={rad} />\r\n}\r\n\r\nfunction LeftKnob({ callback, rad }) {\r\n    const func = (nX, nY) => {\r\n        let radians = 2*Math.PI - ((Math.atan2(nY, nX) + (3*Math.PI/4) + (2*Math.PI)) % (2*Math.PI)) // converts to [0, 2PI] clockwise and applies offset\r\n        radians = radians > 7*Math.PI/4 ?  0 : radians > 3*Math.PI/2 ? 3*Math.PI/2 : radians // clamping so 270-360 is unusable\r\n        callback(radians / (3*Math.PI/2), radians) // return normalized values [0, 1] & radians\r\n    }\r\n    return <Knob func={func} offset={225} rad={rad} />\r\n}\r\n\r\n// [21.533203125, 22050] Hz\r\nexport function FrequencyKnob({ callback, rad }) {\r\n    const normalizedToFreq = (value, rad) => {\r\n        const baseValue = 21.533203125\r\n        const index = Math.trunc(value / 0.1)\r\n        const freq = (baseValue * (2 ** index)) * (1 + (value - (index / 10)) * 10)\r\n        callback(freq, rad)\r\n    }\r\n    return <LeftKnob callback={normalizedToFreq} rad={rad} />\r\n}\r\n\r\n// [0.0001, 1000]\r\nexport function QKnob({ callback, rad }) {\r\n    const normalizedToQ = (value, rad) => {\r\n        const q = value * 99.9999 + 0.0001\r\n        callback(q, rad)\r\n    }\r\n    return <LeftKnob callback={normalizedToQ} rad={rad} />\r\n}\r\n\r\n// [-40, 40] dB\r\nexport function GainKnob({ callback, rad }) {\r\n    const normalizedToGain = (value, rad) => {\r\n        const gain = value * 40\r\n        callback(gain, rad)\r\n    }\r\n    return <CenterKnob callback={normalizedToGain} rad={rad} />\r\n}","import React, { useState } from 'react'\r\nimport { Range, Direction } from 'react-range'\r\nimport { useAudioStore, useEffectsStore, useToolbarStore } from '../GlobalState'\r\nimport { FrequencyKnob, QKnob, GainKnob } from './Knob'\r\nimport shallow from 'zustand/shallow'\r\nimport styles from '../Styles/AudioEffects.module.css'\r\n\r\nexport default function AudioEffects() {\r\n    const selectedAudio = useToolbarStore(state => state.selectedAudio)\r\n    const effects = useEffectsStore(state => state.effects)\r\n\r\n    return (\r\n        effects.length > 0 && selectedAudio < effects.length &&\r\n        <div id={styles.audioEffects}>\r\n            <Gain />\r\n            <div id={styles.filters}>\r\n                <Filter type=\"lowpass\" />\r\n                <Filter type=\"highpass\" />\r\n                <Filter type=\"bandpass\" />\r\n                <Filter type=\"peaking\" gainKnob={true} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Filter({ type, gainKnob = false }) {\r\n    const audioContext = useAudioStore(state => state.audioContext)\r\n    const selectedAudio = useToolbarStore(state => state.selectedAudio)\r\n    const [filter, updateFilter, toggleFilter] = useEffectsStore(state => [\r\n        state.effects[selectedAudio][type], state.updateFilter, state.toggleFilter\r\n    ], shallow)\r\n\r\n    return (\r\n        <div className={styles.filter}>\r\n            <FilterToggle\r\n                label={type}\r\n                value={filter.on}\r\n                handleChange={() => toggleFilter(selectedAudio, type, !filter.on, audioContext)}\r\n            />\r\n            <KnobPanel\r\n                label=\"Freq\"\r\n                value={filter.frequency.value}\r\n                unit=\"Hz\"\r\n            >\r\n                <FrequencyKnob\r\n                    rad={filter.frequency.rad}\r\n                    callback={(value, rad) => updateFilter(selectedAudio, type, 'frequency', value, rad)}\r\n                />\r\n            </KnobPanel>\r\n            <KnobPanel\r\n                label=\"Q\"\r\n                value={filter.Q.value}\r\n            >\r\n                <QKnob\r\n                    rad={filter.Q.rad}\r\n                    callback={(value, rad) => updateFilter(selectedAudio, type, 'Q', value, rad)}\r\n                />\r\n            </KnobPanel>\r\n            {gainKnob &&\r\n                <KnobPanel\r\n                    label=\"Gain\"\r\n                    value={filter.gain.value}\r\n                    unit=\"dB\"\r\n                >\r\n                    <GainKnob\r\n                        rad={filter.gain.rad}\r\n                        callback={(value, rad) => updateFilter(selectedAudio, type, 'gain', value, rad)}\r\n                    />\r\n                </KnobPanel>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction KnobPanel({ label, value, unit, children }) {\r\n    return (\r\n        <div className={styles.knobPanel}>\r\n            <div className={styles.knobContainer}>\r\n                {children}\r\n            </div>\r\n            <div className={styles.infoContainer}>\r\n                <p className={styles.label}>{label}</p>\r\n                <p className={styles.value}>{Math.trunc(value)} {unit}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction FilterToggle({ label, value, handleChange }) {\r\n    return (\r\n        <div className={styles.togglePanel}>\r\n            <p className={styles.label}>{label}</p>\r\n            <div className={styles.toggle}>\r\n                <input \r\n                    type=\"checkbox\"\r\n                    className={styles.filterCheckbox} \r\n                    id={label} \r\n                    checked={value} \r\n                    onChange={handleChange} \r\n                    hidden\r\n                />\r\n                <label \r\n                    htmlFor={label} \r\n                    className={styles.filterToggle}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Gain() {\r\n    const selectedAudio = useToolbarStore(state => state.selectedAudio)\r\n    const [gain, setGain] = useEffectsStore(state => [state.effects[selectedAudio].gain, state.setGain], shallow)\r\n\r\n    return (\r\n        <div id={styles.gain}>\r\n            <p className={styles.label}>Gain</p>\r\n            <Range\r\n                step={0.01}\r\n                min={0}\r\n                max={2}\r\n                values={[gain]}\r\n                onChange={(values) => setGain(values[0], selectedAudio)}\r\n                direction={Direction.Up}\r\n                renderTrack={({ props, children }) => (\r\n                    <div\r\n                        {...props}\r\n                        id={styles.gainSliderTrack}\r\n                        style={{'--size': `${gain/2*100}%`}}\r\n                    >\r\n                        {children}\r\n                    </div>\r\n                )}\r\n                renderThumb={({ props }) => (\r\n                    <div\r\n                        {...props}\r\n                        id={styles.gainSliderThumb}\r\n                    />\r\n                )}\r\n            />\r\n            <p>{Math.floor(gain * 100) / 100}</p>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport shallow from 'zustand/shallow'\r\n\r\nimport ImportDialog from './Components/ImportDialog'\r\nimport AudioContainer from './Components/AudioContainer'\r\nimport Toolbar from './Components/Toolbar'\r\nimport { useToolbarStore } from './GlobalState'\r\nimport AudioEffects from './Components/AudioEffects'\r\nimport styles from './Styles/App.module.css'\r\n\r\nexport default function App() {\r\n    const [isImportDialogOpen, setIsImportDialogOpen] = useToolbarStore(state => [\r\n        state.isImportDialogOpen, state.setIsImportDialogOpen\r\n    ], shallow)\r\n    const [audioFileFormat, setAudioFileFormat] = useState('.wav')\r\n\r\n    return (\r\n        <div id={styles.app}>\r\n            <Toolbar \r\n                audioFileFormat={audioFileFormat}\r\n                setAudioFileFormat={setAudioFileFormat}\r\n            />\r\n            {isImportDialogOpen && \r\n                <ImportDialog \r\n                    onDialogClose={() => setIsImportDialogOpen(false)}\r\n                />\r\n            }\r\n            <AudioContainer />\r\n            <AudioEffects />\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"waveform\":\"Waveform_waveform__32nEt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3mOTd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"audioItem\":\"AudioItem_audioItem__zjKev\",\"trimBlock\":\"AudioItem_trimBlock__1JPMF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"audioContainer\":\"AudioContainer_audioContainer__13SkW\",\"progressBar\":\"AudioContainer_progressBar__1jFpy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"knob\":\"Knob_knob__2Txiq\",\"indicator\":\"Knob_indicator__1iLAT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appName\":\"Toolbar_appName__2zC8B\",\"toolbar\":\"Toolbar_toolbar__2lgd_\",\"toolContainer\":\"Toolbar_toolContainer__1Br4f\",\"button\":\"Toolbar_button__5S7Xq\",\"editContainer\":\"Toolbar_editContainer__1KMwP\",\"format\":\"Toolbar_format__2mNnk\",\"formatSelector\":\"Toolbar_formatSelector__VE51N\",\"formatOptions\":\"Toolbar_formatOptions__uj1ZL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"audioEffects\":\"AudioEffects_audioEffects__2nJnV\",\"filters\":\"AudioEffects_filters__1F6vt\",\"gain\":\"AudioEffects_gain__uXg2S\",\"filter\":\"AudioEffects_filter__27Udb\",\"label\":\"AudioEffects_label__7GMfW\",\"value\":\"AudioEffects_value__HoFN3\",\"togglePanel\":\"AudioEffects_togglePanel__2rIln\",\"toggle\":\"AudioEffects_toggle__1iM0E\",\"filterToggle\":\"AudioEffects_filterToggle__1e9S7\",\"gainSliderThumb\":\"AudioEffects_gainSliderThumb__3dVwC\",\"filterCheckbox\":\"AudioEffects_filterCheckbox__8damn\",\"knobPanel\":\"AudioEffects_knobPanel__2p_jn\",\"knobContainer\":\"AudioEffects_knobContainer__3mlSP\",\"infoContainer\":\"AudioEffects_infoContainer__142fZ\",\"gainSliderTrack\":\"AudioEffects_gainSliderTrack___0czf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1DDOM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"importDialogBackground\":\"ImportDialog_importDialogBackground__28ahg\",\"importDialog\":\"ImportDialog_importDialog__1cvRM\",\"searchContainer\":\"ImportDialog_searchContainer__3n0ay\",\"searchbar\":\"ImportDialog_searchbar__1gz2Z\",\"searchButton\":\"ImportDialog_searchButton__-QYvt\",\"soundList\":\"ImportDialog_soundList__23x-A\",\"soundInfo\":\"ImportDialog_soundInfo__3HLhf\",\"soundNameDescription\":\"ImportDialog_soundNameDescription__1faaa\",\"buttonContainer\":\"ImportDialog_buttonContainer__VK8ts\",\"button\":\"ImportDialog_button__1MtdB\",\"navButtonContainer\":\"ImportDialog_navButtonContainer__11uQr\",\"navButton\":\"ImportDialog_navButton__1j4AB\"};"],"sourceRoot":""}